{"version":3,"file":"static/js/186.ed4ee14b.chunk.js","mappings":"uMAwCA,UApCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAY,UAAD,OAAWN,EAAX,aACRO,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACfJ,GAAW,OAAII,GAChB,IACAE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GAKJ,GAAE,CAACX,KAIF,wBACsB,IAAnBG,EAAQW,QACP,oEAEAX,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,oCAAYD,MACZ,uCAAeC,OAFRF,EAKZ,KAIR,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovies } from 'servises/getMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  \n  useEffect(() => {\n    fetchMovies(`/movie/${movieId}/reviews`)\n      .then(({ data: { results } }) => {\n        setReviews([...results]);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // return () => {\n\n    // }\n  }, [movieId]);\n\n  //author,content\n  return (\n    <ul>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h4>Autor: {author}</h4>\n              <p>Character: {content}</p>\n            </li>\n          );\n        })\n      )}\n    </ul>\n  );\n};\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovies","then","results","data","catch","error","console","log","length","map","id","author","content"],"sourceRoot":""}